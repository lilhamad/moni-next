import type { NextPage, NextPageContext } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
let { GETUSER_URL } = process.env;

type Props = {
  message: string;
}
const getUser = async () => {
  let res = await fetch(`${GETUSER_URL}`);
    console.log("ðŸš€ ~ res", res)
    // return Hompage("");
    let data = res.json();
    console.log("ðŸš€ ~ data", data)
    return data;
    // return Hompage(res.json());
  };

  const Hompage = ({ message }: any) => {
    console.log("ðŸš€ ~ user", message.data.user.balance)
    let bal = message.data.user.balance;
    return (
      <div className={styles.container}>
      <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
      </Head>
      
      <main className={styles.main}>
      <h1 className={styles.title}>
      </h1>
      <div className="max-w-xs my-2 overflow-hidden rounded shadow-lg">
      <div className="px-6 py-4">
      <div className="mb-2 text-xl font-bold">Wallet</div>
      <br/>
      <p>Name : </p>
      <p>Balance : {bal}</p>
      <form className="flex flex-col" method="post" action="/api/fund">
      <label htmlFor="name" className="mb-2 italic">Amount</label>
      <br/>
      <input className="mb-4 border-b-2"  name="amount"  type="number" min="0" max="50000000000000" step="0.01"  required  />
      <br/>
      <input  type= "hidden"    name="email" value="lilhamad8@gmail.com" required  />
      <input type= "hidden"  name="userId" value="1" required  />
      <br/>
      <button  type="submit" className="px-4 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700" >  Fund </button>
      </form>    
      <br/>
      
      <form className="flex flex-col" method="post" action="/api/transfer">
      <label htmlFor="name" className="mb-2 italic">Recipient ID</label>
      <br/>
      <input className="mb-4 border-b-2"  name="recipientId"  type="text"  required  />
      <br/>
      <label htmlFor="name" className="mb-2 italic">Amount</label>      <br/>
      <input className="mb-4 border-b-2"  name="amount"  type="number"  required  />
      <input  type= "hidden"    name="senderId" value="1" required  /><br/>
      <button  type="submit" className="px-4 py-2 font-bold text-white bg-blue-500 rounded-full hover:bg-blue-700" >  Transfer </button>
      </form>
      </div>
      </div>
      </main>
      
      </div>
      )
    }
    


  //   type Props = {
  //     message: string;
  //   }
    
    // function Index({ message }: Props) {
    //   return <>
    //     <Links/>
    //     <ApiCallout message={message}/>
    //     <p>The following is a result of a server side api call pre-render. If you right click and view source, the response from the API call will be visible in the source.</p>
    //     <p>This is different than say... Inspect Element, which shows the client side rendered content.</p>
    //     <p>This means that search engines can scrape this page, and immediately see the content, without trusting that the search engines can render SPA's.</p>
    //   </>;
    // }
    
    // Index.getInitialProps = async (ctx: NextPageContext) => {
    //   const message: string = await fetchUnrestricted();
    //   return { message };
    // };
        
    Hompage.getInitialProps = async (ctx: NextPageContext) => {
      const message: string = await getUser();
      console.log("ðŸš€ ~ message", message)
      return { message };
    };
    
    // export default Index;
    export default Hompage
